@startuml

title __APP's Class Diagram__\n

  package inf112.skeleton.app {
    class AIRobot {
        - id : int
        - sprite : Sprite
        - alive : Boolean
        - posX : int
        - posY : int
        - checkpoint : int[]
        - flagsPassed : int
        - lives : int
        - damage : int
        - w : float
        - h : float
        - tiledMap : TiledMap
        - prop : MapProperties
        - mapWidth : int
        - mapHeight : int
        - tilePixelWidth : int
        - tilePixelHeight : int
        - x0 : int
        - y0 : int
        - turn : int
        - selectedCards : Cards[]
        + rng()
        + makeDeck()
        + fillDeck()
        + doTurn()
        + AIRobot()
        + setDirection()
        + moveSprite()
        + rotateSprite()
        + getAlive()
        + getPosX()
        + getPosY()
        + getSprite()
        + getCheckpoint()
        + getFlagsPassed()
        + getDirection()
        + getLives()
        + getDamage()
        + getSpriteX()
        + getSpriteY()
        + setAlive()
        + setCheckpoint()
        + setPosX()
        + setPosY()
        + setDamage()
        + setLives()
        + getTilePixelWidth()
        + getTilePixelHeight()
        + rotate_right()
        + rotate_left()
        + moveForward()
        + move()
        + died()
        + takeDamage()
        + checkNext()
        + canMove()
        + robotFireLasers()
        + robotFireLasers()
    }
  }
  

  package inf112.skeleton.app {
    class Button {
        - posX : int
        - posY : int
        - name : String
        - buttonSprite : Sprite
        + Button()
        + createButton()
        + getPosX()
        + getPosY()
        + getSprite()
        + buttonClicked()
    }
  }
  

  package inf112.skeleton.app {
    interface IButton {
        {abstract} + buttonClicked()
    }
  }
  

  package inf112.skeleton.app {
    interface IRobot {
        {abstract} + getAlive()
        {abstract} + getPosX()
        {abstract} + getPosY()
        {abstract} + getSprite()
        {abstract} + getCheckpoint()
        {abstract} + getFlagsPassed()
        {abstract} + getDirection()
        {abstract} + getLives()
        {abstract} + getDamage()
        {abstract} + died()
        {abstract} + takeDamage()
        {abstract} + checkNext()
        {abstract} + canMove()
        {abstract} + moveForward()
        {abstract} + setPosX()
        {abstract} + setPosY()
        {abstract} + moveSprite()
        {abstract} + rotateSprite()
        {abstract} + getTilePixelWidth()
        {abstract} + getTilePixelHeight()
        {abstract} + setDamage()
        {abstract} + setAlive()
        {abstract} + setCheckpoint()
        {abstract} + setDirection()
        {abstract} + rotate_right()
        {abstract} + rotate_left()
    }
  }
  

  package inf112.skeleton.app {
    class Main {
        {static} + main()
    }
  }
  

  package inf112.skeleton.app {
    class RoboRallyDemo {
        {static} - tiledMap : TiledMap
        - tiledMapRenderer : TiledMapRenderer
        - camera : OrthographicCamera
        - i : int
        - tick : int
        {static} - turn : int
        {static} - isEndOfTurn : Boolean
        {static} - robot : Robot
        - viewPort : FitViewport
        {static} - cardHandler : CardHandler
        {static} - selectedCards : Cards[]
        - firstRund : boolean
        - firstround : boolean
        - statBoardList : ArrayList<Sprite>
        - batch : SpriteBatch
        - texture : Texture
        - sprite : Sprite
        - AIsprite : Sprite
        - posX : float
        - posY : float
        - font : BitmapFont
        - statBoardSprite : Sprite
        {static} - map : GameMap
        - starts : int[][]
        {static} - client : Client
        {static} - robots : Robot[]
        - sprites : Sprite[]
        - textures : Texture[]
        {static} - clientCount : int
        {static} - colors : String[]
        {static} - ID : int
        {static} - ready : boolean[]
        - moves : String[][]
        - order : int[]
        {static} - singlePlayerMode : boolean
        {static} - AIs : AIRobot[]
        - AIstarts : int[][]
        {static} + getSinglePlayerMode()
        {static} + setReady()
        {static} + killMe()
        {static} + amIAlive()
        {static} + amIAliveAI()
        {static} + setDead()
        {static} + getColors()
        {static} + setClientCount()
        + createv2()
        + create()
        + dispose()
        + render()
        + resize()
        + pause()
        + resume()
        + keyDown()
        + keyUp()
        + keyTyped()
        + touchDown()
        {static} + getRobot()
        {static} + getAIs()
        {static} + getRobots()
        + touchUp()
        + touchDragged()
        + mouseMoved()
        + scrolled()
        - createGrid()
        {static} + getTiledMap()
        {static} + getIGameMap()
        + setCamera()
        + endTurnButtonCreation()
        + powerdownButtonCreation()
        + statBoardCreation()
        + drawStats()
        + drawReady()
        + doTurn()
        - mapElements()
        {static} + areCardSlotsFull()
        {static} + getCardHandler()
        + checkLock()
        {static} + getEndOfTurn()
        {static} + getTurn()
        {static} + setID()
        {static} + getID()
        {static} + getClient()
        + checkMode()
    }
  }
  

  package inf112.skeleton.app {
    class Robot {
        - sprite : Sprite
        - alive : Boolean
        - posX : int
        - posY : int
        - checkpoint : int[]
        - flagsPassed : int
        - lives : int
        - damage : int
        - w : float
        - h : float
        - tiledMap : TiledMap
        - prop : MapProperties
        - mapWidth : int
        - mapHeight : int
        - tilePixelWidth : int
        - tilePixelHeight : int
        - x0 : int
        - y0 : int
        - turn : int
        - initPowerdown : boolean
        - execPowerdown : boolean
        - indexToBePushed : int
        - willDie : Boolean
        + Robot()
        + Robot()
        + Robot()
        + getAlive()
        + getPosX()
        + getPosY()
        + getSprite()
        + getCheckpoint()
        + getFlagsPassed()
        + getDirection()
        + getLives()
        + getDamage()
        + getSpriteX()
        + getSpriteY()
        + moveSprite()
        + rotateSprite()
        + getTilePixelWidth()
        + getTilePixelHeight()
        + setAlive()
        + setCheckpoint()
        + setFlagsPassed()
        + setDirection()
        + setPosX()
        + setPosY()
        + setDamage()
        + rotate_right()
        + rotate_left()
        + moveForward()
        + move()
        + died()
        + takeDamage()
        + getExecPowerdown()
        + setExecPowerdown()
        + getInitPowerdown()
        + robotFireLasers()
        + setInitPowerdown()
        + doPowerdown()
        + playerCollidesWithPlayer()
        + checkNext()
        + canPush()
        + pushRobot()
        - updateMeOnline()
        + canMove()
    }
  }
  

  package inf112.skeleton.app {
    class mainMenu {
        {static} - mainRunning : boolean
        ~ batch : SpriteBatch
        - font : BitmapFont
        + mainMenu()
        + startMenu()
        + render()
        # getCenterY()
        # getClientBtn()
        # getServerBtn()
        # getStartBtn()
        {static} + getMainRunning()
        {static} + setMainRunning()
    }
  }
  

  AIRobot -up-|> IRobot
  AIRobot o-- CardHandler : cardHandler
  AIRobot o-- Direction : dir
  AIRobot o-- GameMap : gameMap
  AIRobot o-- Deck : randomDeck
  AIRobot o-- ExpressBelt : ebelt
  AIRobot o-- Belt : belt
  AIRobot o-- Spin : spin
  Button -up-|> IButton
  Button o-- CardHandler : cardHandler
  Button o-- Robot : robot
  RoboRallyDemo -up-|> ApplicationListener
  RoboRallyDemo -up-|> InputProcessor
  RoboRallyDemo o-- Button : endTurnButton
  RoboRallyDemo o-- Button : powerdownButton
  RoboRallyDemo o-- AIRobot : AIrobot
  RoboRallyDemo o-- Cards : statBoard0
  RoboRallyDemo o-- Cards : card
  RoboRallyDemo o-- mainMenu : mainMenu
  RoboRallyDemo o-- IGrid : grid
  RoboRallyDemo o-- Server : server
  Robot -up-|> IRobot
  Robot o-- CardHandler : cardHandler
  Robot o-- Direction : dir
  Robot o-- GameMap : gameMap
  Robot o-- ExpressBelt : ebelt
  Robot o-- Belt : belt
  Robot o-- Spin : spin
  Robot o-- Direction : dirToBePushed
  mainMenu o-- Button : serverButton
  mainMenu o-- Button : clientButton
  mainMenu o-- Button : startButton


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
