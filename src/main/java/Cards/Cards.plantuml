@startuml

title __CARDS's Class Diagram__\n

  package Cards {
    class CardHandler {
        - batch : SpriteBatch
        - cardSprite10 : Sprite
        - font : BitmapFont
        - cardSlotPos : ArrayList<CardSlots>
        - randomSpriteList : ArrayList<Sprite>
        - spritePos : ArrayList<Sprite>
        - selectedCards : Cards[]
        - counter : int
        - isDone : boolean
        - notFirst : boolean
        - isClicked : boolean
        - isInside : boolean
        - cardDelt : int
        - cardSlotLock : int
        - lockedList : ArrayList<Sprite>
        - pri : int
        - name : String
        - x : int
        + CardHandler()
        + dragged()
        + letGo()
        + click()
        + crushBug()
        + powerdownCards()
        # getCardCenterX()
        # getCardCenterY()
        # getCardSlotCenterX()
        # getCardSlotCenterY()
        # insideCardSlot()
        + insideCard()
        + setCardSprites()
        + adjustCardLocation()
        - spriteToPri()
        - spriteToName()
        + createInitialDecklist()
        - updateDeckList()
        + extraxtLockedCards()
        + drawCards()
        + createCardSlots()
        + drawCardSlots()
        - getRandomSprite()
        - rng()
        - addSprites()
        + nullyFy()
        + lockDown()
        + getSelectedCards()
        + getSpritePos()
        + setNotFirst()
        + setisDone()
        + getisDone()
        + drawLockedList()
        + setCardDelt()
        + setIsDone()
    }
  }
  

  package Cards {
    class CardSlots {
        - cardSlotSprite1 : Sprite
        - posX : float
        - posY : float
        + CardSlots()
        + CardSlots()
        + getCardSlotSprite()
        + getPosX()
        + getPosY()
    }
  }
  

  package Cards {
    enum CardValues {
      create cards
      spr
      priority
      name
    }
  }
  

  package Cards {
    class Cards {
        - cardSprite : Sprite
        - defaultPosX : float
        - defaultPosY : float
        - posX : float
        - posY : float
        - name : String
        - priority : int
        + Cards()
        + Cards()
        + getName()
        + getPriority()
        + getCardSprite()
        + getPosX()
        + getPosY()
        + getDefaultPosX()
        + getDefaultPosY()
        + setCardSprite()
    }
  }
  

  package Cards {
    class Deck {
        {static} - DeckList : ArrayList<Cards>
        + Deck()
        + getDeckList()
    }
  }
  

  package Cards {
    interface ICard {
        {abstract} + getCardSprite()
        {abstract} + getPosX()
        {abstract} + getPosY()
        {abstract} + getDefaultPosX()
        {abstract} + getDefaultPosY()
    }
  }
  

  package Cards {
    interface ICardSlot {
        {abstract} + getCardSlotSprite()
        {abstract} + getPosX()
        {abstract} + getPosY()
    }
  }
  

  package Cards {
    interface IDeck {
        {abstract} + getDeckList()
    }
  }
  

  CardHandler o-- Deck : Deck
  CardHandler o-- Deck : lockedDeck
  CardHandler o-- Cards : clickedCard
  CardHandler o-- Cards : listCard
  CardHandler o-- CardSlots : temp
  CardHandler o-- Robot : robot
  CardHandler o-- IGameMap : map
  CardSlots -up-|> ICardSlot
  CardValues -up-|> Serializable
  Cards -up-|> ICard
  Cards -up-|> Serializable
  Deck -up-|> IDeck


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
