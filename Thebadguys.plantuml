@startuml

title __MVN-APP's Class Diagram__\n

  package inf112.skeleton.app {
    class AIRobot {
    }
  }
  

  package BoardElements {
    class Belt {
    }
  }
  

  package BoardElements {
    abstract class BeltElement {
    }
  }
  

  package BoardElements {
    abstract class BoardElement {
    }
  }
  

  package inf112.skeleton.app {
    class Button {
    }
  }
  

  package Cards {
    class CardHandler {
    }
  }
  

  package inf112.skeleton.app {
    class CardSlots {
    }
  }
  

  package Cards {
    class CardSlots {
    }
  }
  

  package inf112.skeleton.app {
    enum CardValues {
    }
  }
  

  package Cards {
    enum CardValues {
    }
  }
  

  package Cards {
    class Cards {
    }
  }
  

  package inf112.skeleton.app {
    class Cards {
    }
  }
  

  package Server {
    class Client {
    }
  }
  

  package Server {
    class ClientBackend {
    }
  }
  

  package Cards {
    class Deck {
    }
  }
  

  package inf112.skeleton.app {
    class Deck {
    }
  }
  

  package Grid {
    enum Direction {
    }
  }
  

  package Grid {
    enum Direction {
    }
  }
  

  package BoardElements {
    class ExpressBelt {
    }
  }
  

  package inf112.skeleton.app {
    class GameEvent {
    }
  }
  

  package map {
    class GameMap {
    }
  }
  

  package map {
    class GameMap {
    }
  }
  

  package inf112.skeleton.app {
    class HelloWorld {
    }
  }
  

  package inf112.skeleton.app {
    class HelloWorld {
    }
  }
  

  package inf112.skeleton.app {
    interface IButton {
    }
  }
  

  package Cards {
    interface ICard {
    }
  }
  

  package inf112.skeleton.app {
    interface ICard {
    }
  }
  

  package Cards {
    interface ICardSlot {
    }
  }
  

  package Cards {
    interface IDeck {
    }
  }
  

  package inf112.skeleton.app {
    interface IDeck {
    }
  }
  

  package map {
    interface IGameMap {
    }
  }
  

  package map {
    interface IGameMap {
    }
  }
  

  package Grid {
    interface IGrid {
    }
  }
  

  package Grid {
    interface IGrid {
    }
  }
  

  package inf112.skeleton.app {
    interface IRobot {
    }
  }
  

  package inf112.skeleton.app {
    interface IRobot {
    }
  }
  

  package Server {
    class Identifier {
    }
  }
  

  package inf112.skeleton.app {
    class Main {
    }
  }
  

  package inf112.skeleton.app {
    class Main {
    }
  }
  

  package inf112.skeleton.app {
    class Main {
    }
  }
  

  package map {
    enum MapTile {
    }
  }
  

  package map {
    enum MapTile {
    }
  }
  

  package map {
    class MovePlayerException {
    }
  }
  

  package map {
    class MovePlayerException {
    }
  }
  

  package Grid {
    class MyGrid {
    }
  }
  

  package Grid {
    class MyGrid {
    }
  }
  

  package inf112.skeleton.app {
    class RoboRallyDemo {
    }
  }
  

  package inf112.skeleton.app {
    class RoboRallyDemo {
    }
  }
  

  package inf112.skeleton.app {
    class RoboRallyDemo {
    }
  }
  

  package inf112.skeleton.app {
    class Robot {
    }
  }
  

  package inf112.skeleton.app {
    class Robot {
    }
  }
  

  package inf112.skeleton.app {
    class Robot {
    }
  }
  

  package Server {
    class Server {
    }
  }
  

  package Server {
    class ServerClient {
    }
  }
  

  package BoardElements {
    class Spin {
    }
  }
  

  package inf112.skeleton.app {
    class mainMenu {
    }
  }
  

  AIRobot -up-|> IRobot
  AIRobot o-- CardHandler : cardHandler
  AIRobot o-- Direction : dir
  AIRobot o-- GameMap : gameMap
  AIRobot o-- Deck : randomDeck
  AIRobot o-- ExpressBelt : ebelt
  AIRobot o-- Belt : belt
  AIRobot o-- Spin : spin
  Belt -up-|> BeltElement
  BeltElement -up-|> BoardElement
  Button -up-|> IButton
  Button o-- CardHandler : cardHandler
  Button o-- Robot : robot
  CardHandler o-- Deck : Deck
  CardHandler o-- Deck : lockedDeck
  CardHandler o-- Cards : clickedCard
  CardHandler o-- Cards : listCard
  CardHandler o-- CardSlots : temp
  CardHandler o-- Robot : robot
  CardHandler o-- IGameMap : map
  CardSlots -up-|> ICardSlot
  CardValues -up-|> Serializable
  Cards -up-|> ICard
  Cards -up-|> Serializable
  Cards -up-|> ICard
  Cards o-- Cards : Dummycard0
  Client -up-|> Runnable
  Client -up-|> JFrame
  Client o-- ClientBackend : client
  Deck -up-|> IDeck
  Deck -up-|> IDeck
  ExpressBelt -up-|> BeltElement
  GameMap -up-|> IGameMap
  GameMap -up-|> IGameMap
  HelloWorld -up-|> ApplicationListener
  HelloWorld -up-|> InputProcessor
  HelloWorld -up-|> ApplicationListener
  HelloWorld -up-|> InputProcessor
  MyGrid -up-|> IGrid
  MyGrid -up-|> IGrid
  RoboRallyDemo -up-|> ApplicationListener
  RoboRallyDemo -up-|> InputProcessor
  RoboRallyDemo -up-|> ApplicationListener
  RoboRallyDemo -up-|> InputProcessor
  RoboRallyDemo o-- Button : endTurnButton
  RoboRallyDemo o-- Button : powerdownButton
  RoboRallyDemo o-- AIRobot : AIrobot
  RoboRallyDemo o-- Cards : statBoard0
  RoboRallyDemo o-- Cards : card
  RoboRallyDemo o-- mainMenu : mainMenu
  RoboRallyDemo o-- IGrid : grid
  RoboRallyDemo o-- Server : server
  RoboRallyDemo -up-|> ApplicationListener
  RoboRallyDemo -up-|> InputProcessor
  Robot -up-|> IRobot
  Robot o-- CardHandler : cardHandler
  Robot o-- Direction : dir
  Robot o-- GameMap : gameMap
  Robot o-- ExpressBelt : ebelt
  Robot o-- Belt : belt
  Robot o-- Spin : spin
  Robot o-- Direction : dirToBePushed
  Server -up-|> Runnable
  Spin -up-|> BoardElement
  mainMenu o-- Button : serverButton
  mainMenu o-- Button : clientButton
  mainMenu o-- Button : startButton


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
